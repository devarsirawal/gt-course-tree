{"version":3,"sources":["Header.js","Footer.js","hooks.js","utils.js","CourseTree.js","ReqContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","href","target","rel","className","xmlns","width","height","viewBox","d","stroke","fill","getData","filePath","setData","fetch","headers","then","response","json","myJson","classes","classList","filter","c","join","Tree","name","data","length","Array","isArray","slice","map","item","index","CourseTree","course","prereqData","postreqData","postreq","prereqFilePath","ReqContainer","useState","prereqs","setPrereqs","postreqs","setPostreqs","selectData","setSelectData","setCourse","selectDataWrapper","Object","keys","val","value","label","useEffect","classNamePrefix","options","onChange","_","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAAS,WAEpB,OACE,gECHSC,G,MAAS,WAEpB,OACE,2DAEE,mBAAGC,KAAK,iDAAiDC,OAAO,SAASC,IAAI,sBAA7E,SACE,qBAAKC,UAAW,OAAQC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAA1F,SACE,sBAAMC,EAAE,4sBACPC,OAAO,QAAQC,KAAK,mB,OCVlBC,EAAU,SAACC,EAAUC,GAChCC,MAAMF,EACF,CACIG,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIbC,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHN,EAAQM,OCYTC,G,MAAU,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAkBA,EAAUC,QAAO,SAACC,GAAD,OAAOA,KAAGC,KAAK,OCnBnEC,EAAO,SAAPA,EAAQ,GAAc,IAFDC,EAEXC,EAAW,EAAXA,KAEd,OAAoB,IAAhBA,EAAKC,OACHC,MAAMC,QAAQH,GAEd,oBAAIxB,UAAW,cAAf,SACE,qBAAIA,UAAW,SAAf,UACE,qBAAKA,UAAWiB,EAAQ,OAAQ,eAAhC,UATeM,EAUMC,EAAK,GAVQ,OAATD,EAAgB,SAAW,YAYpD,oBAAIvB,UAAW,cAAf,SACGwB,EAAKI,MAAM,GAAGC,KAAI,SAACC,EAAMC,GACxB,OACE,oBAAgB/B,UAAW,SAA3B,SACE,cAACsB,EAAD,CAAME,KAAMM,KADLC,aAWjB,qBAAK/B,UAAWiB,EAAQ,OAAQ,eAAhC,SACGO,EAAI,KAMX,qBAAKxB,UAAWiB,EAAQ,OAAQ,eAAhC,yBAOOe,EAAa,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC/C,OACE,mCACE,sBAAKnC,UAAW,YAAhB,UACGmC,IACCA,EAAYV,OAAS,EACnB,qCACE,oBAAIzB,UAAW,cAAf,SACGmC,EAAYN,KAAI,SAACO,GAAD,OACf,oBAAkBpC,UAAWiB,EAAQ,SAAU,iBAA/C,SACE,qBAAKjB,UAAWiB,EAAQ,OAAQ,gBAAhC,SAAkDmB,KAD3CA,QAMb,qBAAKpC,UAAWiB,EAAQ,OAAQ,eAAhC,sBAGF,oBAAIjB,UAAW,cAAf,SACE,oBAAIA,UAAWiB,EAAQ,SAAU,iBAAjC,SACE,qBAAKjB,UAAWiB,EAAQ,OAAQ,gBAAhC,8BAKR,oBAAIjB,UAAWiB,EAAQ,OAAQ,QAA/B,SACE,qBAAIjB,UAAW,SAAf,UACE,qBAAKA,UAAWiB,EAAQ,OAAQ,eAAhC,SACGgB,IAEFC,GAAe,cAAC,EAAD,CAAMV,KAAMU,e,OClElCG,G,MAAiB,qBAIVC,EAAe,WAC1B,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BN,mBAAS,IAArC,mBAAON,EAAP,KAAea,EAAf,KAEMC,EAAoB,SAACvB,GACzBqB,EAAcG,OAAOC,KAAKzB,GAAMK,KAAI,SAACqB,GAAD,MAClC,CACEC,MAAOD,EACPE,MAAOF,QAWb,OANAG,qBAAU,WACR7C,EAAQ6B,EAAgBI,GACxBjC,EApBoB,qBAoBKmC,GACzBnC,EAAQ6B,EAAgBU,KACvB,IAGD,sBAAK/C,UAAW,UAAhB,UACE,cAAC,IAAD,CAAQA,UAAU,yBAAyBsD,gBAAgB,eAAeC,QAASX,EAAYY,SAAU,SAACN,EAAKO,GAAN,OAAYX,EAAUI,EAAG,UAClI,qBAAKlD,UAAW,gBAAhB,SAEIiC,EACE,cAAC,EAAD,CAAYA,OAAQA,EAAQC,WAAYM,EAAQP,GAASE,YAAaO,EAAST,KAE/E,mBAAGjC,UAAW,cAAd,oECrBG0D,MAdf,WAGE,OACE,mCACE,sBAAK1D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAciC,OANP,YAOP,cAAC,EAAD,UCFO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.82fd31cd.chunk.js","sourcesContent":["import './Header.css'\n\nexport const Header = () => {\n  \n  return (\n    <header>\n      GT Course Tree Visualizer\n    </header>\n  );\n};","import './Footer.css'\n\nexport const Footer = () => {\n  \n  return (\n    <footer>\n      Made by Devarsi Rawal\n      <a href=\"https://github.com/devarsirawal/gt-course-tree\" target=\"_blank\" rel=\"noreferrer noopener\">\n        <svg className={\"icon\"} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n           stroke=\"white\" fill=\"white\"/>\n        </svg>\n      </a>\n    </footer>\n  );\n};\n","export const getData = (filePath, setData) => {\n  fetch(filePath, \n      {\n          headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n          }\n      }\n      )\n          .then((response) => {\n              return response.json();\n          })\n          .then((myJson) => {\n              setData(myJson);\n          });\n};","export const formatPrereqs = (data) => {\n  console.log(data);\n  if (data.length !== 0) {\n      if (Array.isArray(data)) {\n          let condList = [];\n          data.slice(1).forEach((item) => {\n              condList.push(formatPrereqs(item));\n          });\n          if (data[0] === \"or\") {\n              return `(${condList.join(\" or \")})`;\n          } else {\n              return `(${condList.join(\" and \")})`;\n          } \n      } else {\n          return `${data[\"id\"]} (${data[\"grade\"]})`;\n      }\n  } else {\n      return \"No prereqs\";\n  }\n};\n\nexport const formatPostreqs = (data) => {\n  return data.length === 0 ? \"No postreqs\" : data.join(\", \");\n};\n\nexport const classes = (...classList) => classList.filter((c) => c).join(' ');","import React from \"react\";\nimport \"./CourseTree.scss\";\nimport { classes } from \"./utils\";\n\nconst formatConditional = (name) => (name === 'or' ? 'one of' : 'all of');\n\nconst Tree = ({ data }) => {\n\n  if (data.length !== 0) {\n    if (Array.isArray(data)) {\n      return (\n        <ul className={\"prereq-tree\"}>\n          <li className={\"branch\"}>\n            <div className={classes(\"node\", \"conditional\")}>\n              {formatConditional(data[0])}\n            </div>\n            <ul className={\"prereq-tree\"}>\n              {data.slice(1).map((item, index) => {\n                return (\n                  <li key={index} className={\"branch\"}>\n                    <Tree data={item} />\n                  </li>\n                );\n              })}\n            </ul>\n          </li>\n        </ul> \n      );\n    } else {\n        return (\n          <div className={classes(\"node\", \"prereq-node\")}>\n            {data[\"id\"]}\n          </div>\n        );\n    }\n  } else {\n    return (\n      <div className={classes(\"node\", \"prereq-node\")}>\n        No prereqs\n      </div>\n    )\n  }\n}\n\nexport const CourseTree = ({ course, prereqData, postreqData }) => {\n  return (\n    <>\n      <div className={\"container\"}>\n        {postreqData && (\n          postreqData.length > 0 ? (\n            <>\n              <ul className={\"prereq-tree\"}>\n                {postreqData.map((postreq) => (\n                  <li key={postreq} className={classes(\"branch\", \"prereq-branch\")}>\n                    <div className={classes(\"node\", \"postreq-node\")}>{postreq}</div>\n                  </li>\n                ))\n          }\n              </ul>\n              <div className={classes(\"node\", \"conditional\")}>needs</div>\n            </>\n          ) : (\n            <ul className={\"prereq-tree\"}>\n              <li className={classes(\"branch\", \"prereq-branch\")}>\n                <div className={classes(\"node\", \"postreq-node\")}>No postreqs</div>\n              </li>\n            </ul>\n          )\n        )}\n        <ul className={classes(\"tree\", \"root\")}>\n          <li className={\"branch\"}>\n            <div className={classes(\"node\", \"course-node\")}>\n              {course}\n            </div> \n            {prereqData && (<Tree data={prereqData} />)}\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};","import React, { useState, useEffect } from \"react\";\nimport { getData } from \"./hooks\";\nimport { CourseTree } from './CourseTree';\nimport Select from 'react-select';\n\nimport \"./ReqContainer.css\"\n\n\nconst prereqFilePath = \"data/prereqs.json\";\nconst postreqFilePath = \"data/postreqs.json\";\n\n\nexport const ReqContainer = () => {\n  const [prereqs, setPrereqs] = useState([]);\n  const [postreqs, setPostreqs] = useState([]);\n  const [selectData, setSelectData] = useState([]);\n  const [course, setCourse] = useState(\"\");\n\n  const selectDataWrapper = (data) => {\n    setSelectData(Object.keys(data).map((val) => (\n      {\n        value: val,\n        label: val\n      }\n    )));\n  };\n\n  useEffect(() => {\n    getData(prereqFilePath, setPrereqs);\n    getData(postreqFilePath, setPostreqs);\n    getData(prereqFilePath, selectDataWrapper);\n  }, []);\n\n  return (\n    <div className={\"content\"}>\n      <Select className=\"react-select-container\" classNamePrefix=\"react-select\" options={selectData} onChange={(val, _) => setCourse(val[\"value\"])}/>\n      <div className={\"visualization\"}>\n        {\n          course ? (\n            <CourseTree course={course} prereqData={prereqs[course]} postreqData={postreqs[course]} />\n          ) : (\n            <p className={\"welcome-msg\"}>Welcome! Choose a class to view its course tree!</p>\n          )\n        }\n      </div>\n    </div>\n  );\n};","import React from \"react\";\nimport './App.css';\nimport { Header } from './Header';\nimport { Footer } from './Footer'\nimport { ReqContainer } from './ReqContainer';\n\nfunction App() {\n  let course = \"CS 4510\";\n\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <ReqContainer course={course}/>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}